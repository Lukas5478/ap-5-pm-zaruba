{"ast":null,"code":"import { __awaiter, __decorate } from 'tslib';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nexport { Storage } from '@ionic/storage';\nimport { isPlatformServer } from '@angular/common';\nvar IonicStorageModule_1;\nconst StorageConfigToken = new InjectionToken('STORAGE_CONFIG_TOKEN');\nclass NoopStorage extends Storage {\n  constructor() {\n    super();\n  }\n  create() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this;\n    });\n  }\n  defineDriver() {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  get driver() {\n    return 'noop';\n  }\n  get(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return null;\n    });\n  }\n  set(key, value) {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  remove(key) {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  clear() {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  length() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return 0;\n    });\n  }\n  keys() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return [];\n    });\n  }\n  forEach(iteratorCallback) {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  setEncryptionKey(key) {}\n}\nfunction provideStorage(storageConfig) {\n  if (isPlatformServer(this.platformId)) {\n    // When running in a server context return the NoopStorage\n    return new NoopStorage();\n  }\n  return new Storage(storageConfig);\n}\nlet IonicStorageModule = IonicStorageModule_1 = class IonicStorageModule {\n  static forRoot(storageConfig = null) {\n    return {\n      ngModule: IonicStorageModule_1,\n      providers: [{\n        provide: StorageConfigToken,\n        useValue: storageConfig\n      }, {\n        provide: Storage,\n        useFactory: provideStorage,\n        deps: [StorageConfigToken]\n      }]\n    };\n  }\n};\nIonicStorageModule = IonicStorageModule_1 = __decorate([NgModule()], IonicStorageModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { IonicStorageModule, StorageConfigToken, provideStorage };","map":{"version":3,"names":["__awaiter","__decorate","InjectionToken","NgModule","Storage","isPlatformServer","IonicStorageModule_1","StorageConfigToken","NoopStorage","constructor","create","defineDriver","driver","get","key","set","value","remove","clear","length","keys","forEach","iteratorCallback","setEncryptionKey","provideStorage","storageConfig","platformId","IonicStorageModule","forRoot","ngModule","providers","provide","useValue","useFactory","deps"],"sources":["D:/ap-5-pm-zaruba/node_modules/@ionic/storage-angular/fesm2015/ionic-storage-angular.js"],"sourcesContent":["import { __awaiter, __decorate } from 'tslib';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nexport { Storage } from '@ionic/storage';\nimport { isPlatformServer } from '@angular/common';\n\nvar IonicStorageModule_1;\nconst StorageConfigToken = new InjectionToken('STORAGE_CONFIG_TOKEN');\nclass NoopStorage extends Storage {\n    constructor() {\n        super();\n    }\n    create() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this;\n        });\n    }\n    defineDriver() {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    get driver() {\n        return 'noop';\n    }\n    get(key) {\n        return __awaiter(this, void 0, void 0, function* () { return null; });\n    }\n    set(key, value) {\n        return __awaiter(this, void 0, void 0, function* () { });\n    }\n    remove(key) {\n        return __awaiter(this, void 0, void 0, function* () { });\n    }\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () { });\n    }\n    length() {\n        return __awaiter(this, void 0, void 0, function* () { return 0; });\n    }\n    keys() {\n        return __awaiter(this, void 0, void 0, function* () { return []; });\n    }\n    forEach(iteratorCallback) {\n        return __awaiter(this, void 0, void 0, function* () { });\n    }\n    setEncryptionKey(key) { }\n}\nfunction provideStorage(storageConfig) {\n    if (isPlatformServer(this.platformId)) {\n        // When running in a server context return the NoopStorage\n        return new NoopStorage();\n    }\n    return new Storage(storageConfig);\n}\nlet IonicStorageModule = IonicStorageModule_1 = class IonicStorageModule {\n    static forRoot(storageConfig = null) {\n        return {\n            ngModule: IonicStorageModule_1,\n            providers: [\n                { provide: StorageConfigToken, useValue: storageConfig },\n                {\n                    provide: Storage,\n                    useFactory: provideStorage,\n                    deps: [StorageConfigToken]\n                }\n            ]\n        };\n    }\n};\nIonicStorageModule = IonicStorageModule_1 = __decorate([\n    NgModule()\n], IonicStorageModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { IonicStorageModule, StorageConfigToken, provideStorage };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}