{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/storage-angular\";\nconst STORAGE_KEY = \"mylist\";\nexport class StorageService {\n  constructor(storage) {\n    this.storage = storage;\n    this.init();\n  }\n  init() {\n    this.storage.create();\n  }\n  getData() {\n    return this.storage.get(STORAGE_KEY) || [];\n  }\n  addData(item) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const storedData = (yield this.storage.get(STORAGE_KEY)) || [];\n      storedData.push(item);\n      return this.storage.set(STORAGE_KEY, storedData);\n    });\n  }\n}\nStorageService.ɵfac = function StorageService_Factory(t) {\n  return new (t || StorageService)(i0.ɵɵinject(i1.Storage));\n};\nStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StorageService,\n  factory: StorageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAGA,MAAMA,WAAW,GAAG,QAAQ;AAK5B,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,OAAgB;IAAhB,YAAO,GAAPA,OAAO;IACzB,IAAI,CAACC,IAAI,EAAE;EACb;EAEAA,IAAI;IACF,IAAI,CAACD,OAAO,CAACE,MAAM,EAAE;EACvB;EAEAC,OAAO;IACL,OAAO,IAAI,CAACH,OAAO,CAACI,GAAG,CAACP,WAAW,CAAC,IAAI,EAAE;EAC5C;EAEMQ,OAAO,CAACC,IAAS;;MACrB,MAAMC,UAAU,GAAG,OAAM,IAAI,CAACP,OAAO,CAACI,GAAG,CAACP,WAAW,CAAC,KAAI,EAAE;MAC5DU,UAAU,CAACC,IAAI,CAACF,IAAI,CAAC;MACrB,OAAO,IAAI,CAACN,OAAO,CAACS,GAAG,CAACZ,WAAW,EAAEU,UAAU,CAAC;IAClD,CAAC;;;;mBAlBUT,cAAc;AAAA;;SAAdA,cAAc;EAAAY,SAAdZ,cAAc;EAAAa,YAFb;AAAM","names":["STORAGE_KEY","StorageService","constructor","storage","init","create","getData","get","addData","item","storedData","push","set","factory","providedIn"],"sourceRoot":"","sources":["D:\\ap-5-pm-zaruba\\src\\app\\services\\storage\\storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage-angular';\n\nconst STORAGE_KEY = \"mylist\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor(private storage: Storage) {\n    this.init();\n  }\n\n  init(){\n    this.storage.create();\n  }\n\n  getData(){\n    return this.storage.get(STORAGE_KEY) || [];\n  }\n\n  async addData(item: any){\n    const storedData = await this.storage.get(STORAGE_KEY) || [];\n    storedData.push(item);\n    return this.storage.set(STORAGE_KEY, storedData);\n  }\n\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}